# Use the file format compatible with Docker Compose 3.8
version: "3.8"

services:
  database:
    image: postgres:11.5

    volumes:
      # Tell Docker where on PostgreSQL container to keep data
      # Store data in volume db_data
      - db_data:/var/lib/postgresql/data

      # copies init.sql file into /docker-entrypoint-initdb.d/init.sql
      # function: to create user for postgres instance named `boats_development`.
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  web:
    # The root directory from which we're building.
    build: .

    # This makes it so any code changes inside the project directory get synced with Docker. 
    # Prevents need to keep restarting container when changing source code of Rails project.
    volumes:
      - .:/code:cached

    # The command to be run when we run "docker-compose up".
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"

    # Expose port 3010 and map it to port 3000 in the container.
    ports:
      - "3010:3000"

    # Specify that this container depends on the other
    # container which we've called "database".
    depends_on:
      - database

    # Specify the values of the environment variables
    # used in this container.
    environment:
      RAILS_ENV: development
      DATABASE_NAME: cryptotickr_development
      DATABASE_USER: cryptotickr_development
      DATABASE_PASSWORD: 
      DATABASE_HOST: database

# Declare the volumes that our application uses.
volumes:
  db_data:
